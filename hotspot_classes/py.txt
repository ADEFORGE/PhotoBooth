partie serveur flask

# Active la synchronisation NTP automatique
sudo timedatectl set-ntp true

# Vérifie la date
timedatectl

sudo date -s "2025-07-04 12:00:00"


sudo apt update
sudo apt install python3 python3-pip python3-flask python3-pil

python3 - <<'EOF'
import flask, PIL
print("Flask", flask.__version__)
print("Pillow", PIL.__version__)
EOF


mkdir -p ~/flask_rpi
cd ~/flask_rpi

nano app.py


chmod +x ~/flask_rpi/app.py

sudo nano /etc/systemd/system/flask_rpi.service



chmod +x app.py
sudo systemctl daemon-reload
sudo systemctl enable flask_rpi.service
sudo systemctl start flask_rpi.service
sudo systemctl restart flask_rpi.service
sudo systemctl status flask_rpi.service



sudo apt install python3-flask python3-pil hostapd dnsmasq nodogsplash
pip3 install qrcode


# a) Remettre wlan0 en place avec son IP statique
sudo ip link set wlan0 down
sudo ip addr flush dev wlan0
sudo ip addr add 192.168.5.1/24 dev wlan0
sudo ip link set wlan0 up

# b) Redémarrer hostapd (le point d’accès)
sudo systemctl restart hostapd

# c) Redémarrer dnsmasq (DHCP/DNS captive)
sudo systemctl restart dnsmasq

# d) Redémarrer Nodogsplash (portail captif)
sudo systemctl restart nodogsplash

# e) Vérifier que tout est UP
sudo systemctl status hostapd --no-pager
sudo systemctl status dnsmasq --no-pager
sudo systemctl status nodogsplash --no-pager


sudo systemctl daemon-reload
sudo systemctl restart flask_rpi.service
sudo systemctl status flask_rpi.service --no-pager

sudo systemctl enable flask_rpi.service
sudo systemctl start flask_rpi.service
sudo systemctl restart flask_rpi.service
sudo systemctl status flask_rpi.service --no-pager

Pense à créer /etc/nodogsplash/htdocs/splash_template.html ainsi :

Oui, c’est ça – en gros tu vas remplacer ton `app.py` actuel par cette nouvelle version, puis redémarrer ton application (et les services système associés) pour que la modif prenne effet. Concrètement :

1. **Sauvegarde**

   * Fais une copie de ton `app.py` actuel :

     ```bash
     cp /chemin/vers/app.py /chemin/vers/app.py.bak
     ```
   * (Optionnel) Sauvegarde aussi ton `splash.html` original s’il contient déjà des modifs utiles :

     ```bash
     cp /etc/nodogsplash/htdocs/splash.html /etc/nodogsplash/htdocs/splash.html.bak
     ```

2. **Déploie le nouveau code**

   * Remplace le contenu de `/chemin/vers/app.py` par le code que je t’ai fourni.
   * Vérifie les droits et la shebang (exécutable, propriétaire root si besoin).

3. **Vérifie le template**

   * Assure-toi que `/etc/nodogsplash/htdocs/splash.html` contient bien ton HTML original (avant injection du QR et du script) – c’est ce fichier qui sera lu au démarrage pour `ORIGINAL_SPLASH_HTML`.

4. **Redémarre ton service Flask**

   * Si tu lances ton app en tant que service systemd, par exemple `hotspot-share.service`, fais :

     ```bash
     systemctl restart hotspot-share
     ```
   * Sinon, si tu lances manuellement :

     ```bash
     pkill -f 'python3.*app.py'
     python3 /chemin/vers/app.py &
     ```

5. **Teste**

   * Fais un nouvel appel POST sur `/share` avec une image.
   * Vérifie que le téléchargement automatique ne s’empile plus (une seule fois).

6. **Vérifie les services réseau**

   * Après chaque génération, `hostapd`, `dnsmasq` et `nodogsplash` sont automatiquement redémarrés par le code. Tu peux néanmoins contrôler leur statut global :

     ```bash
     systemctl status hostapd dnsmasq nodogsplash
     ```

Après ça, à chaque test, tu devrais voir dans `/etc/nodogsplash/htdocs/splash.html` **une seule** balise `<meta>` et **un seul** script d’auto-download, et l’image ne se téléchargera qu’une fois.

Dis-moi si tu rencontres un souci à l’une de ces étapes !
